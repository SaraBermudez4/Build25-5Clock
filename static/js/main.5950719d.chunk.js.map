{"version":3,"sources":["styles/style.jsx","Reloj.jsx","App.js","index.js"],"names":["StyledDiv","styled","div","StyledContent","Container","StyledButton","Button","StyledDivTime","Length","title","changeTime","type","time","formatTime","increment","decrement","fontSize","onClick","id","color","Reloj","useState","DTime","setTime","BTime","setBTime","STime","setSTime","timeOn","setTimeOn","stop","setStop","Audio","BAudio","playAudio","currentTime","play","minutes","Math","floor","seconds","cant","prev","textAlign","mb","mt","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","marginRight","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5950719d.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Container } from '@chakra-ui/layout'\r\nimport { Button } from '@chakra-ui/button'\r\n\r\nexport const StyledDiv = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 50px 200px 50px;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 40px;\r\n`\r\n\r\nexport const StyledContent = styled(Container)`\r\n    /* display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    width: 700px;\r\n    margin: auto; */\r\n    padding: 30px;\r\n    text-align: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    background-color: #00adb5;\r\n    border-radius: 20px;\r\n`\r\n\r\nexport const StyledButton = styled(Button)`\r\nborder-radius: 100%;\r\n\r\n`\r\n\r\nexport const StyledDivTime = styled.div`\r\n    border-radius:20px; \r\n    border:solid 1px;\r\n    padding: 10px;\r\n    padding-bottom: 20px;\r\n    background-color: #00adb5;\r\n`","import { Button } from '@chakra-ui/button'\r\nimport { Heading } from '@chakra-ui/layout'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { Center } from '@chakra-ui/layout'\r\nimport React, { useState } from 'react'\r\nimport { StyledDiv, StyledContent, StyledButton, StyledDivTime } from './styles/style.jsx'\r\nimport { TiArrowUpThick, TiArrowDownThick, TiMediaPlayOutline, TiMediaPauseOutline, TiMediaStopOutline } from \"react-icons/ti\";\r\n\r\nconst Length = ({ title, changeTime, type, time, formatTime, increment, decrement }) => {\r\n    return (\r\n        <div>\r\n            <Text fontSize=\"25px\">{title}</Text>\r\n            <StyledDiv >\r\n\r\n                <StyledButton onClick={() => changeTime(-60, type)} id={decrement}>\r\n                    <i ><TiArrowDownThick fontSize=\"20px\" color=\"black\" /></i>\r\n                </StyledButton>\r\n                <Text fontSize=\"20px\" id=\"break-length\" >{formatTime(time)}</Text>\r\n                <StyledButton onClick={() => changeTime(60, type)} id={increment}>\r\n                    <i ><TiArrowUpThick fontSize=\"20px\" color=\"black\" /></i>\r\n                </StyledButton>\r\n            </StyledDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Reloj = () => {\r\n\r\n    const [DTime, setTime] = useState(25 * 60)\r\n    const [BTime, setBTime] = useState(5 * 60)\r\n    const [STime, setSTime] = useState(25 * 60)\r\n    const [timeOn, setTimeOn] = useState(false)\r\n    const [stop, setStop] = useState(false)\r\n    const [BAudio, setBAudio] = useState(new Audio(\"http://www.sonidosmp3gratis.com/sounds/002663916_prev.mp3\"))\r\n\r\n    const playAudio = () => {\r\n        BAudio.currentTime = 0\r\n        BAudio.play()\r\n    }\r\n\r\n    const formatTime = (time) => {\r\n        let minutes = Math.floor(time / 60)\r\n        let seconds = time % 60\r\n        return (\r\n            (minutes < 10 ? \"0\" + minutes : minutes) +\r\n            \":\" +\r\n            (seconds < 10 ? \"0\" + seconds : seconds)\r\n        )\r\n    }\r\n\r\n    const changeTime = (cant, type) => {\r\n        if (type === \"break\") {\r\n            if (BTime <= 60 && cant < 0) {\r\n                return\r\n            }\r\n            setBTime((prev) => prev + cant)\r\n        } else {\r\n            if (STime <= 60 && cant < 0) {\r\n                return\r\n            }\r\n            setSTime((prev) => prev + cant)\r\n            if (!timeOn) {\r\n                setTime(STime + cant)\r\n            }\r\n        }\r\n    }\r\n\r\n    const controlTime = () => {\r\n        let second = 1000\r\n        let date = new Date().getTime()\r\n        let nextDate = new Date().getTime() + second\r\n        let onBreakVariable = stop\r\n        if (!timeOn) {\r\n            let interval = setInterval(() => {\r\n                date = new Date().getTime()\r\n                if (date > nextDate) {\r\n                    setTime(prev => {\r\n                        if (prev <= 0 && !onBreakVariable) {\r\n                            playAudio()\r\n                            onBreakVariable = true\r\n                            setStop(true)\r\n                            return BTime\r\n                        } else if (prev <= 0 && onBreakVariable) {\r\n                            playAudio()\r\n                            onBreakVariable = false\r\n                            setStop(false)\r\n                            return STime\r\n                        }\r\n                        return prev - 1\r\n                    })\r\n                    nextDate += second\r\n                }\r\n            }, 30)\r\n            localStorage.clear()\r\n            localStorage.setItem('interval-id', interval)\r\n        }\r\n        if (timeOn) {\r\n            clearInterval(localStorage.getItem(\"interval-id\"))\r\n        }\r\n\r\n        setTimeOn(!timeOn)\r\n    }\r\n\r\n    const resetTime = () => {\r\n        setTime(25 * 60)\r\n        setBTime(5 * 60)\r\n        setSTime(25 * 60)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Heading textAlign=\"center\" mb=\"50px\" mt=\"50px\">25 + 5 Clock</Heading>\r\n            <StyledContent>\r\n                <div id=\"break-label\">\r\n                    <Length\r\n                        title={\"Break Length\"}\r\n                        changeTime={changeTime}\r\n                        type={\"break\"}\r\n                        time={BTime}\r\n                        formatTime={formatTime}\r\n                        increment=\"break-increment\"\r\n                        decrement=\"break-decrement\"\r\n                    />\r\n                </div>\r\n                <div id=\"session-label\" >\r\n                    <Length\r\n                        title={\"Session Length\"}\r\n                        changeTime={changeTime}\r\n                        type={\"session\"}\r\n                        time={STime}\r\n                        formatTime={formatTime}\r\n                        increment=\"session-increment\"\r\n                        decrement=\"session-decrement\"\r\n                    />\r\n                </div>\r\n\r\n                <StyledDivTime>\r\n                    <Text fontSize=\"40px\" id=\"timer-label\">{stop ? \"Break\" : \"Session\"}</Text>\r\n                    <Text fontSize=\"40px\" id=\"time-left\" >{formatTime(DTime)}</Text>\r\n                    <StyledButton onClick={controlTime} id=\"start_stop\" marginRight=\"30px\">\r\n                        {timeOn ?\r\n                            <i ><TiMediaPauseOutline fontSize=\"20px\" color=\"black\" /></i>\r\n                            :\r\n                            <i ><TiMediaPlayOutline fontSize=\"20px\" color=\"black\" /></i>\r\n                        }\r\n                    </StyledButton>\r\n                    <StyledButton onClick={resetTime} id=\"reset\">\r\n                        <i><TiMediaStopOutline fontSize=\"20px\" color=\"black\" /></i>\r\n                    </StyledButton>\r\n                </StyledDivTime>\r\n            </StyledContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reloj\r\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport Reloj from \"./Reloj\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <Reloj />\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}